#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import re
import sys

LLVM_PATH = "/data/binaries/llvm"
compileFlags = ["--cuda-gpu-arch=sm_61"]
linkerFlags = [
    f"-Wl,-rpath,{LLVM_PATH}/lib/x86_64-unknown-linux-gnu/c++/,-rpath,{LLVM_PATH}/lib",
    "-L/usr/local/cuda/lib64/", "-lcudart_static", "-ldl", "-lrt", "-lpthread"
]


def parseArguments(args):
    args = args[1:]

    # Filter -gencode stuff
    args = " ".join(args)
    args = re.sub(r"-gencode arch=\w+_\d{2},code=\w+_\d{2}", "", args)
    args = re.sub(r"-ftz=true", "-fcuda-flush-denormals-to-zero", args)
    args = re.sub(r"-maxrregcount=(\d+)", r"-Xcuda-ptxas -maxrregcount=\1",
                  args)
    args = args.split(" ")

    try:
        index = args.index("-c")
        inputFile = args[index + 1]
        if not inputFile.endswith(".cu"):
            compileFlags.append("-x cuda")
        args = compileFlags + args
    except ValueError:
        args = args + linkerFlags

    return " ".join(args)


if __name__ == "__main__":
    os.system(f"{LLVM_PATH}/bin/clang++ %s" % parseArguments(sys.argv))
